services:
 
  frontend:
    image: node:20-alpine
    working_dir: /home/app
    ports:
      - "80:4200"
    command: sh -c "npm install -g @angular/cli@19.2.4 && npm install --legacy-peer-deps && ng serve --host 0.0.0.0 --poll=2000 --port 4200 --disable-host-check"
    volumes:
      - ./frontend:/home/app
      - /home/app/node_modules  

# APIGateway
  apigateway:
    image: node:20-alpine
    depends_on:
      - ms-conta
      - ms-cliente
      - ms-gerente
      - ms-auth
    working_dir: /app
    command: sh -c "npm install && npm start"
    volumes:
      - ./microservicos/APIGateway/:/app
    ports:
      - 3000:3000


# Microsservi√ßos (back)
  ms-conta:
    image: maven:3.8.4-openjdk-17-slim
    depends_on:
      - postgres
    working_dir: /app
    command: "mvn spring-boot:run -Dspring-boot.run.jvmArguments='-Dspring.devtools.restart.enabled=true -Dspring-boot.run.profiles=dev'"
    volumes:
      - ./microservicos/Msconta/:/app
      - ~/.m2:/root/.m2
    ports: 
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/DAC
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=senha

  ms-gerente:
    image: maven:3.8.4-openjdk-17-slim
    depends_on:
      - postgres
    working_dir: /app     
    command: "mvn spring-boot:run -Dspring-boot.run.jvmArguments='-Dspring.devtools.restart.enabled=true' -Dspring-boot.run.profiles=dev"
    volumes:
      - ./microservicos/Msgerente/:/app
      - ~/.m2:/root/.m2
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/DAC
      - SPRING_DATASOURCE_USERNAME=dbgerente
      - SPRING_DATASOURCE_PASSWORD=dbGerente
    ports: 
      - 8081:8080
      - 1111:35729

  ms-cliente:
    image: maven:3.8.4-openjdk-17-slim
    depends_on:
      - postgres
    working_dir: /app     
    command: "mvn spring-boot:run -Dspring-boot.run.jvmArguments='-Dspring.devtools.restart.enabled=true' -Dspring-boot.run.profiles=dev"
    volumes:
      - ./microservicos/Mscliente/:/app
      - ~/.m2:/root/.m2
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/DAC
      - SPRING_DATASOURCE_USERNAME=dbcliente
      - SPRING_DATASOURCE_PASSWORD=dbCliente
    ports: 
      - 8083:8080


  ms-auth:
      image: maven:3.8.4-openjdk-17-slim
      depends_on:
        - mongodb
      working_dir: /app
      command: "mvn spring-boot:run -Dspring-boot.run.jvmArguments='-Dspring.devtools.restart.enabled=true -Dspring-boot.run.profiles=dev'"
      volumes:
        - ./microservicos/ms-auth/:/app
        - ~/.m2:/root/.m2
        - ./public-key.pem:/app/public-key.pem
        - ./private-key.pem:/app/private-key.pem
      ports:
        - 8082:8080
      environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:senha@mongodb:27017/bantads?authSource=admin

# RABBITMQ
      
  rabbitmq:
    image: rabbitmq:3.13.7-management
    working_dir: /app
    volumes:
      - ./microservicos/RabbitMQ:/app
    ports:
      - 5672:5672
      - 8085:15672


# Bancos de dados
  postgres:
    image: postgres:15.5
    depends_on:
      - rabbitmq
    environment:
      POSTGRES_DB: DAC
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senha
    volumes:
      - ./bancoDeDados/postgres/:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432

  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=mongodb
      - MONGODB_INITDB_ROOT_PASSWORD=senha
    volumes:
      - bantads:/data/db
    ports:
      - 27018:27017

#gerenciador do postgres via web
  adminer:
    image: adminer
    ports:
      - 12345:8080

volumes:
  bantads:
    driver: local
